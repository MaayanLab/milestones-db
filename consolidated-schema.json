
// model: Assay(perturbagens, cell-line) = [readout1, readout2,...readout3]


// Model: Assay,Time(perturbagens, cell-line) ----> readout(1,2,3)



// SCHEMA OF MongoDB BACKEND:

{
    'center': String // Center name
    'assay': String // Assay name (Taken from short descriptive label of project)
    'assay-info': String // Additional assay information
    'readout-count': int
    
    'release-dates': [
        {
            'date': Date  // Data release date
            'release-level': int // Data release level
        }
        {
            'date': Date
            'release-level': int
        }
        .
        .
        .

    ]

    'perturbagens': [
        {
            'name': String
            'type': String // FDA Approved Drug, small molecule, chemical, genetic
        }
        {
            'name': String
            'type': String
        }
        .
        .
        .

    ]
    
    'perturbagens-meta': {
        'pair': Boolean // NeuroLINCS provides information about pairs of perturbagens
        'dose': [String, String, String, ...] // i.e 0.000012uM. Could be just one dose
        'dose-count': int // Number of doses
        'time': [String, String, ...] // Time points of experiment
        'time-unit': String // Days, hours, etc.
        'time-points': int // Number of time points in experiment
        'count-type':[
            {
                'count': int // Number of perturbagens
                'type': String // Type of perturbages i.e small molecules
            }
            {
                'count': int
                'type': String
            }
            .
            .
            .
        ]
    }

    'cell-lines': [
        {
        	'control-or-disease': String
            'name': String
            'type': String // Normal or iPS-differentiated
            'class': String // Normal, cancer-line, imm cells, etc.
            'tissue' String // Tissue of cell line
        }
        {
        	'control-or-disease': String
            'name': String
            'type': String
            'class': String
            'tissue' String
        }
        .
        .
        .

    ]

    'cell-lines-meta': [
        { 
            'count': int // Number of cell lines
            'type': String
        }
        { 
            'count': int
            'type': String
        }
        .
        .
        .
    ]

    'instance-meta': {
        'reps': int // Biological replicates
        'tech-reps': int // MSSM provides technical replicate information as well
        'map': [
            {
                'perturbagen': String // Will be used to map which perturbations
                'cell-line': String    // apply to which cell lines
            }
            {
                'perturbagen': String
                'cell-line': String
            }
            .
            .
            .

        ]
    }

    'readouts': [
        {
            'name': String
            // Not currently implemented but may add later:
            // Phenotype, Proteomics, etc.
            //'category': String
            'datatype': String // Image, Text, etc.
        }
        {
            'name': String
            // 'category': String
            'datatype': String
        }
        .
        .
        .

    ]

}
